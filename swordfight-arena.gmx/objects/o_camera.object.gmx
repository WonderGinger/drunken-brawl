<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = (o_player_1.x + o_player_2.x)*0.5
y = (o_player_1.y + o_player_2.y)*0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xTo, yTo;
var xpt = (o_player_1.x + o_player_2.x)*0.5;
var ypt = (o_player_1.y + o_player_2.y)*0.5;

direction = point_direction(x,y,xpt,ypt);
xTo = xpt + lengthdir_x(min(96,distance_to_point(xpt,ypt)),direction);
yTo = ypt + lengthdir_y(min(96,distance_to_point(xpt,ypt)),direction);

x += (xTo - x)/25;
y += (yTo - y)/25;

view_xview = -(view_wview/2) + x;
view_yview = -(view_hview/2) + y;

view_xview = clamp(view_xview, 0, room_width - view_wview);
view_yview = clamp(view_yview, 0, room_height - view_hview);

// Scale camera based on distance
var p_dist_x = abs(o_player_1.x - o_player_2.x);
if(p_dist_x &gt; view_wview[0]/2 &amp;&amp; view_hview[0] &lt; room_height) {
    view_wview[0] += 3.2;
    view_hview[0] += 1.8;
}
if(p_dist_x &lt; view_wview[0] &amp;&amp; view_wview[0] &gt; room_width*2/3){
    view_wview[0] -= 3.2;
    view_hview[0] -= 1.8;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
